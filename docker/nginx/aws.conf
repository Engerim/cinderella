worker_processes 1;
daemon off;
events { worker_connections 1024; }

http {
    include    mime.types;
    sendfile off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
      listen                80;

      server_name           localhost;
      root /srv/www/app;
      if ($ssl_protocol = "") {
           return 301 https://$host$request_uri;
      }

      access_log            /var/log/nginx/cinderella.access.log;
      error_log             /var/log/nginx/cinderella.error.log;

    }
    server {
      listen       443 ssl;

      server_name  localhost;

      ssl on;

      ssl_certificate           /opt/nginx/certs/cinderella.crt;
      ssl_certificate_key       /opt/nginx/certs/cinderella.key;
      ssl_session_cache         shared:SSL:10m;
      ssl_session_timeout       5m;
      ssl_protocols             SSLv3 TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers               HIGH:!aNULL:!MD5;
      ssl_prefer_server_ciphers on;

      access_log            /var/log/nginx/ssl-cinderella.dev.access.log;
      error_log             /var/log/nginx/ssl-cinderella.error.log;

      gzip  on;
      gzip_disable msie6;
      #gzip_static on;
      gzip_types text/plain text/css application/x-javascript text/xml application/xml+rss application/javascript text/javascript;
      gzip_vary on;

      location / {
          root /srv/www/app/ui/web;
          expires -1;
          add_header Pragma "no-cache";
          add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
          try_files $uri $uri/ /index.html =404;
          index index.html;
      }

      location ~ /(api|(_(profiler|wdt|error)|bundles)) {
          root /srv/www/app/web;
          # try to serve file directly, fallback to app.php
          try_files $uri /app.php$is_args$args;
      }

      location ~ ^/(app|config)\.php(/|$) {
          root /srv/www/app/web;
          fastcgi_pass php.php.dev.cinderella:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          fastcgi_param SYMFONY_ENV dev_system;
          fastcgi_param SYMFONY_DEBUG 1;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          internal;
      }

    }
}


